AWSTemplateFormatVersion: '2010-09-09'
Description: Creates an S3 bucket configured for hosting a static website, and a Route
  53 DNS record pointing to the bucket
Parameters:
  FullDomainName:
    Type: String
    Description: The full domain name e.g. www.jevsejev.io
    AllowedPattern: (?!-)[a-zA-Z0-9-.]{1,63}(?<!-)
    ConstraintDescription: must be a valid DNS zone name.
  AcmCertificateArn:
    Type: String
    Default: ''
    Description: the Amazon Resource Name (ARN) of an AWS Certificate Manager (ACM) certificate.
  IAMDeployUser:
    Type: String
    Default: ''
    Description: the IAM user/role that is allowed to deploy content
  IAMRole:
    Type: String
    Description: IAM Role Name for IAM Policy Attachment

Mappings:
  RegionMap:
    us-east-1:
      S3HostedZoneId: Z3AQBSTGFYJSTF
      S3WebsiteEndpoint: s3-website-us-east-1.amazonaws.com
    us-west-1:
      S3HostedZoneId: Z2F56UZL2M1ACD
      S3WebsiteEndpoint: s3-website-us-west-1.amazonaws.com
    us-west-2:
      S3HostedZoneId: Z3BJ6K6RIION7M
      S3WebsiteEndpoint: s3-website-us-west-2.amazonaws.com
    eu-west-1:
      S3HostedZoneId: Z1BKCTXD74EZPE
      S3WebsiteEndpoint: s3-website-eu-west-1.amazonaws.com
    ap-southeast-1:
      S3HostedZoneId: Z3O0J2DXBE1FTB
      S3WebsiteEndpoint: s3-website-ap-southeast-1.amazonaws.com
    ap-southeast-2:
      S3HostedZoneId: Z1WCIGYICN2BYD
      S3WebsiteEndpoint: s3-website-ap-southeast-2.amazonaws.com
    ap-northeast-1:
      S3HostedZoneId: Z2M4EHUR26P7ZW
      S3WebsiteEndpoint: s3-website-ap-northeast-1.amazonaws.com
    sa-east-1:
      S3HostedZoneId: Z31GFT0UA1I2HV
      S3WebsiteEndpoint: s3-website-sa-east-1.amazonaws.com

Conditions:
  UseACMCertificate:
    !Not [!Equals [!Ref AcmCertificateArn, '']]
  UseIAMRole:
    !Not [!Equals [!Ref IAMRole, '']]
  UseDeploymentUser:
    !Not [!Equals [!Ref IAMDeployUser, '']]

Resources:
  IAMPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - s3:GetBucketLocation
              - s3:ListAllMyBuckets
            Resource: 'arn:aws:s3:::*'
          - Effect: Allow
            Action:
              - s3:ListBucket
            Resource: !Sub arn:aws:s3:::${FullDomainName}
          - Effect: Allow
            Action:
              - s3:PutObject
              - s3:GetObject
              - s3:DeleteObject
            Resource: !Sub arn:aws:s3:::${FullDomainName}/*
      PolicyName: !Sub ${FullDomainName}Policy
      Roles:
        - !If [UseIAMRole, !Ref IAMRole, !Ref 'AWS::NoValue']
  WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref 'FullDomainName'
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: 404.html
    DeletionPolicy: Retain
  WebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref 'WebsiteBucket'
      PolicyDocument:
        Statement:
        - Sid: PublicReadForGetBucketObjects
          Effect: Allow
          Principal: '*'
          Action: s3:GetObject
          Resource: !Join ['', ['arn:aws:s3:::', !Ref 'WebsiteBucket', /*]]

  DeployUserAccess:
    Type: AWS::IAM::Policy
    Condition: UseDeploymentUser
    Properties:
      Users:
        - !Ref IAMDeployUser
      PolicyDocument:
        Statement:
          - Sid: DeploymentUserAccess
            Effect: Allow
            Principal:
              AWS: !Ref IAMDeployUser
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:DeleteObject
            Resource: !Join ['', ['arn:aws:s3:::', !Ref 'WebsiteBucket', /*]]

  WebsiteCloudfront:
    Type: AWS::CloudFront::Distribution
    DependsOn:
    - WebsiteBucket
    Properties:
      DistributionConfig:
        Comment: Cloudfront Distribution pointing to S3 bucket
        Origins:
        - DomainName: !Join [., [!Ref 'FullDomainName', !FindInMap [RegionMap, !Ref 'AWS::Region', S3WebsiteEndpoint]]]
          Id: S3Origin
          CustomOriginConfig:
            HTTPPort: '80'
            HTTPSPort: '443'
            OriginProtocolPolicy: http-only
        Enabled: true
        HttpVersion: 'http2'
        DefaultRootObject: index.html
        Aliases:
        - !Ref 'FullDomainName'
        DefaultCacheBehavior:
          AllowedMethods:
          - GET
          - HEAD
          Compress: true
          TargetOriginId: S3Origin
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: none
          ViewerProtocolPolicy: !If [UseACMCertificate, 'redirect-to-https', 'allow-all']
        PriceClass: PriceClass_All
        ViewerCertificate:
          MinimumProtocolVersion: TLSv1
          AcmCertificateArn:
            !If [UseACMCertificate, !Ref AcmCertificateArn, !Ref 'AWS::NoValue']
          CloudFrontDefaultCertificate:
            !If [UseACMCertificate, !Ref 'AWS::NoValue', 'true']
          SslSupportMethod:
            !If [UseACMCertificate, sni-only, !Ref 'AWS::NoValue']
Outputs:
  BucketName:
    Value: !Ref 'WebsiteBucket'
    Description: Name of S3 bucket to hold website content
  CloudfrontEndpoint:
    Value: !GetAtt [WebsiteCloudfront, DomainName]
    Description: Endpoint for Cloudfront distribution
  FullDomain:
    Value: !Ref 'FullDomainName'
    Description: Full DomainName
